{"frames":[{"func":"ccb_working_query %>% filter(donortype == \"I\") %>% group_by(subscriptionid) %>% \n    arrange(start_date, .by_group = TRUE) %>% mutate(adv_sub_id = as.numeric(adv_sub_id)) %>% \n    select(-c(test, position, test2)) %>% mutate(ordernumber = as.character(ordernumber)) %>% \n    left_join(last_term, by = c(adv_sub_id = \"subscriptionreference\",  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., start_date = ymd(start_date))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate.data.frame(., start_date = ymd(start_date))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_cols(.data, dplyr_quosures(...), by)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(for (i in seq_along(dots)) {\n    poke_error_context(dots, i, mask = mask)\n    context_poke(\"column\", old_current_column)\n    new_columns <- mutate_col(dots[[i]], data, mask, new_columns) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_col(dots[[i]], data, mask, new_columns)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mask$eval_all_mutate(quo)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ymd(start_date)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".parse_xxx(..., orders = \"ymd\", quiet = quiet, tz = tz, locale = locale, \n    truncated = truncated)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"as.Date.POSIXct(parse_date_time(dates, orders, quiet = quiet, \n    tz = \"UTC\", locale = locale, truncated = truncated))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"parse_date_time(dates, orders, quiet = quiet, tz = \"UTC\", locale = locale, \n    truncated = truncated)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".local_parse(x[to_parse], TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".best_formats(trainset, orders, locale = locale, select_formats, \n    drop = drop, train = train)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"unique(guess_formats(x, orders, locale = locale, preproc_wday = TRUE))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"guess_formats(x, orders, locale = locale, preproc_wday = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".build_formats(REGS, orders, x2)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mapply(function(reg, name) {\n    out <- .substitute_formats(reg, x)\n    if (!is.null(out)) {\n        names(out) <- rep.int(name, length(out)) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"attempt to set an attribute on NULL"}